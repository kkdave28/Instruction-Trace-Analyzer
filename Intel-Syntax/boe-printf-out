1: endbr64
2: push rbp  Operand Values: rbp = 0x0, Constant = 0x0
3: mov  rbp,rsp  Operand Values: rbp = 0x7fffffffdb20, Constant = 0x7fffffffdb20  Operand Values: rsp = 0x7fffffffdb20, Constant = 0x7fffffffdb20
4: sub  rsp,0x40  Operand Values: rsp = 0x7fffffffdae0, Constant = 0x7fffffffdae0  Operand Values: Constant = 0x40
5: mov  DWORD PTR [rbp-0x34],edi  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdaec  Operand Values: edi = 0x1, Constant = 0x1
6: mov  QWORD PTR [rbp-0x40],rsi  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdae0  Operand Values: rsi = 0x7fffffffdc18, Constant = 0x7fffffffdc18
7: mov  rax,QWORD PTR fs:0x28  Operand Values: rax = 0x4f6a83bf7d9bbd00, Constant = 0x4f6a83bf7d9bbd00  Operand Values: fs = 0x0, 
8: mov  QWORD PTR [rbp-0x8],rax  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdb18  Operand Values: rax = 0x4f6a83bf7d9bbd00, Constant = 0x4f6a83bf7d9bbd00
9: xor  eax,eax  Operand Values: eax = 0x0, Constant = 0x0  Operand Values: eax = 0x0, Constant = 0x0
10: mov  BYTE PTR [rbp-0x10],0x78  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdb10  Operand Values: Constant = 0x78
11: mov  BYTE PTR [rbp-0xf],0x78  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdb11  Operand Values: Constant = 0x78
12: mov  BYTE PTR [rbp-0xe],0x78  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdb12  Operand Values: Constant = 0x78
13: lea  rax,[rbp-0x18]  Operand Values: rax = 0x7fffffffdb08, Constant = 0x7fffffffdb08  Operand Values: rbp = 0x7fffffffdb20,  *LOAD*  Effective Address = 0x7fffffffdb08
14: add  rax,0x7  Operand Values: rax = 0x7fffffffdb0f, Constant = 0x7fffffffdb0f  Operand Values: Constant = 0x7
15: mov  QWORD PTR [rbp-0x20],rax  Operand Values: rbp = 0x7fffffffdb20,  *STORE*  Effective Address = 0x7fffffffdb00  Operand Values: rax = 0x7fffffffdb0f, Constant = 0x7fffffffdb0f
16: mov  rax,QWORD PTR [rbp-0x20]  Operand Values: rax = 0x7fffffffdb0f, Constant = 0x7fffffffdb0f  Operand Values: rbp = 0x7fffffffdb20,  *LOAD*  Effective Address = 0x7fffffffdb00
17: mov  DWORD PTR [rax],0x0  Operand Values: rax = 0x7fffffffdb0f,  *STORE*  Effective Address = 0x7fffffffdb0f  Operand Values: Constant = 0x0
18: movzx  eax,BYTE PTR [rbp-0x10]  Operand Values: eax = 0x0, Constant = 0x0  Operand Values: rbp = 0x7fffffffdb20,  *LOAD*  Effective Address = 0x7fffffffdb10
19: movsx  ecx,al  Operand Values: ecx = 0x0, Constant = 0x0  Operand Values: al = 0x0, Constant = 0x0
20: mov  eax,0x7b  Operand Values: eax = 0x7b, Constant = 0x7b  Operand Values: Constant = 0x7b
21: cdq
22: idiv ecx  Operand Values: ecx = 0x0, Constant = 0x0
 
**CRASHING INSTRUCTION** 22: idiv ecx
Possible corrupting instruction found: 17: mov DWORD PTR [rax] ,0x0
Possible corrupting instruction found: 10: mov BYTE PTR [rbp-0x10] ,0x78