Instruction 1: endbr64
NO ARGS
---------------------------------------
Instruction 2: push
Operand #0: %rbp
---------------------------------------
Instruction 3: mov
Operand #0: %rsp
Operand #1: %rbp
---------------------------------------
Instruction 4: sub
Operand #0: $0x40
Operand #1: %rsp
---------------------------------------
Instruction 5: mov
Operand #0: %fs:0x28
Operand #1: %rax
---------------------------------------
Instruction 6: mov
Operand #0: %rax
Operand #1: -0x8(%rbp)  ---> Effective Address = 0x7fffffffddb8
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 7: xor
Operand #0: %eax
Operand #1: %eax
---------------------------------------
Instruction 8: movl
Operand #0: $0x0
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 9: jmp
Operand #0: 0x55555555517e  ---> Effective Address = 0x55555555517e
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 10: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 11: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 12: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 13: cltq
NO ARGS
---------------------------------------
Instruction 14: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdd90
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 15: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 16: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 17: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 18: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 19: cltq
NO ARGS
---------------------------------------
Instruction 20: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdd94
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 21: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 22: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 23: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 24: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 25: cltq
NO ARGS
---------------------------------------
Instruction 26: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdd98
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 27: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 28: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 29: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 30: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 31: cltq
NO ARGS
---------------------------------------
Instruction 32: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdd9c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 33: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 34: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 35: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 36: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 37: cltq
NO ARGS
---------------------------------------
Instruction 38: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdda0
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 39: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 40: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 41: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 42: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 43: cltq
NO ARGS
---------------------------------------
Instruction 44: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdda4
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 45: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 46: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 47: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 48: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 49: cltq
NO ARGS
---------------------------------------
Instruction 50: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffdda8
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 51: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 52: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 53: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 54: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 55: cltq
NO ARGS
---------------------------------------
Instruction 56: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffddac
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 57: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 58: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 59: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 60: mov
Operand #0: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
Operand #1: %eax
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 61: cltq
NO ARGS
---------------------------------------
Instruction 62: movl
Operand #0: $0x98
Operand #1: -0x30(%rbp,%rax,4)  ---> Effective Address = 0x7fffffffddb0
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 63: addl
Operand #0: $0x1
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ STORE OPERATION ------>
---------------------------------------
Instruction 64: cmpl
Operand #0: $0x8
Operand #1: -0x34(%rbp)  ---> Effective Address = 0x7fffffffdd8c
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 65: jle
Operand #0: 0x55555555516d  ---> Effective Address = 0x55555555516d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 66: mov
Operand #0: $0x0
Operand #1: %eax
---------------------------------------
Instruction 67: mov
Operand #0: -0x8(%rbp)  ---> Effective Address = 0x7fffffffddb8
Operand #1: %rdx
***** MEMORY ACCESS *****
<------ LOAD OPERATION ------>
---------------------------------------
Instruction 68: xor
Operand #0: %fs:0x28
Operand #1: %rdx
---------------------------------------
Instruction 69: je
Operand #0: 0x55555555519d  ---> Effective Address = 0x55555555519d
***** MEMORY ACCESS *****
<------ BASIC MEMORY ACCESS ------>
---------------------------------------
Instruction 70: leaveq
NO ARGS
---------------------------------------
Instruction 71: retq
NO ARGS
---------------------------------------
