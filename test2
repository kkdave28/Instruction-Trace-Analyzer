=> 0x555555555149 <main>:	endbr64 
=> 0x55555555514d <main+4>:	push   %rbp
=> 0x55555555514e <main+5>:	mov    %rsp,%rbp
=> 0x555555555151 <main+8>:	sub    $0x20,%rsp
=> 0x555555555155 <main+12>:	mov    %fs:0x28,%rax
=> 0x55555555515e <main+21>:	mov    %rax,-0x8(%rbp)
=> 0x555555555162 <main+25>:	xor    %eax,%eax
=> 0x555555555164 <main+27>:	movl   $0x0,-0x18(%rbp)
=> 0x55555555516b <main+34>:	jmp    0x555555555182 <main+57>
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x55555555516d <main+36>:	mov    -0x18(%rbp),%eax
=> 0x555555555170 <main+39>:	add    $0x61,%eax
=> 0x555555555173 <main+42>:	mov    %eax,%edx
=> 0x555555555175 <main+44>:	mov    -0x18(%rbp),%eax
=> 0x555555555178 <main+47>:	cltq   
=> 0x55555555517a <main+49>:	mov    %dl,-0x12(%rbp,%rax,1)
=> 0x55555555517e <main+53>:	addl   $0x1,-0x18(%rbp)
=> 0x555555555182 <main+57>:	cmpl   $0x8,-0x18(%rbp)
=> 0x555555555186 <main+61>:	jle    0x55555555516d <main+36>
=> 0x555555555188 <main+63>:	mov    $0x0,%eax
=> 0x55555555518d <main+68>:	mov    -0x8(%rbp),%rcx
=> 0x555555555191 <main+72>:	xor    %fs:0x28,%rcx
=> 0x55555555519a <main+81>:	je     0x5555555551a1 <main+88>
=> 0x5555555551a1 <main+88>:	leaveq 
=> 0x5555555551a2 <main+89>:	retq   
gs             0x0                 0
A debugging session is active.

	Inferior 1 [process 10311] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]

